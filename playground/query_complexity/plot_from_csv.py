#!/usr/bin/env python3
from matplotlib import pyplot as plt
import matplotlib.ticker as ticker
import pandas as pd
import numpy as np
import seaborn as sns

# Input the file name
path = "/home/jigao/Workspace/BigAnn/playground/query_complexity/bigann.csv" #TODO:
# path = input("Please type in the input file input_path generated by C++ program: ")
df = pd.read_csv(path, sep = r'\s* \s*', engine = "python")
print(df)

num_query = 10000

df_top1 = df[df['topk'] == 1]
df_top5 = df[df['topk'] == 5]
df_top9 = df[df['topk'] == 9]


x_top1 = df_top1['nprobe']
y_top1 = df_top1['Recall%100'] / num_query
# print(x_top1)
# print(y_top1)

x_top5 = df_top5['nprobe']
y_top5 = df_top5['Recall%100'] / num_query

x_top9 = df_top9['nprobe']
y_top9 = df_top9['Recall%100'] / num_query


plt.plot(x_top1, y_top1, label='TOP1', color='green', linewidth=3)
plt.plot(x_top5, y_top5, label='TOP5', color='red', linewidth=3)
plt.plot(x_top9, y_top9, label='TOP9', color='blue', linewidth=3)

plt.legend(fontsize = 'xx-large', markerscale = 2.0)
plt.xticks([1, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 200, 300, 400, 500])
plt.tick_params(axis='x', which='major', labelsize=23)
plt.tick_params(axis='y', which='major', labelsize=35)

# zip joins x and y coordinates in pairs
for x,y in zip(x_top1, y_top1):
    label = "{:.2f}".format(y)
    plt.annotate(label, # this is the text
                 (x,y), # these are the coordinates to position the label
                 textcoords="offset points", # how to position the text
                 xytext=(0,10), # distance from text to points (x,y)
                 fontsize=20,
                 color='green',
                 ha='center') # horizontal alignment can be left, right or center

for x,y in zip(x_top5, y_top5):
    label = "{:.2f}".format(y)
    plt.annotate(label, # this is the text
                 (x,y), # these are the coordinates to position the label
                 textcoords="offset points", # how to position the text
                 xytext=(0,10), # distance from text to points (x,y)
                 fontsize=20,
                 color='red',
                 ha='center') # horizontal alignment can be left, right or center

for x,y in zip(x_top9, y_top9):
    label = "{:.2f}".format(y)
    plt.annotate(label, # this is the text
                 (x,y), # these are the coordinates to position the label
                 textcoords="offset points", # how to position the text
                 xytext=(0,10), # distance from text to points (x,y)
                 fontsize=20,
                 color='blue',
                 ha='center') # horizontal alignment can be left, right or center


# TODO: Norm Distribution or Norm Bias or N-TH Distance
plt.xlabel("# NPROBE (# Centriods)", size = 40)
plt.ylabel("Percentage of Quires to Find ALL Top1/5/9 GT", size = 40)
plt.title("BIGANN 1B Index: # NPROBE ~ Percentage of Quires to Find ALL Top1/5/9 GT", size = 60)
plt.show()


